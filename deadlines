#!/usr/bin/python3

"""
Author: Amit Yadav
Date: April 27, 2020

TODO: 
Group deadlines by week. Put a horizontal line after each week.
"""

import argparse
import os.path
import getpass
from classes import *


user = getpass.getuser()
parser = argparse.ArgumentParser()

home = os.path.expanduser("~")
data_file = home+"/deadlines.pkl"

data = None
if os.path.isfile(data_file):
    with open(data_file, "rb") as f:
        data = pickle.load(f)
else:
    data = Data()

parser.add_argument("-a", "--add", nargs="+", help="Add a new deadline: Name, date, month")
parser.add_argument("--details", type=str, help="Use it to add details for the deadline,\
                                                 must be used with --add")
parser.add_argument("-r", "--remove", help="Remove a deadline: -r Name", type=str)
parser.add_argument("-rf", "--removeall", help="Remove all deadlines", action='store_true')
parser.add_argument("--upcoming", action="store_true", help="Shows upcoming deadlines")
parser.add_argument("--all", action="store_true", help="Shows all deadlines including past")

args = parser.parse_args()
if args.add is not None:
    # (name, date, month) = args.add
    data.add_deadline(*args.add, details=args.details)
    data.save_data(data_file)
    data.print_upcoming()

if args.details and not args.add:
    print(bcolors.FAIL, "--details can't be used without --add")
    exit()

if args.remove is not None:
    name = args.remove
    data.remove_deadline(name)
    data.save_data(data_file)
    data.print_upcoming()

if args.removeall:
    data.removeall()
    data.save_data(data_file)

if args.all:
    data.print_all()

if args.upcoming:
    data.print_upcoming()
if args.removeall:
    data.removeall()
    data.save_data(data_file)

if not (args.add or args.remove or args.all or args.upcoming):
    data.print_upcoming()


